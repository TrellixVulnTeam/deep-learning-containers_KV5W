# docker image region us-west-2
FROM 763104351884.dkr.ecr.us-west-2.amazonaws.com/pytorch-training:1.12.0-gpu-py38-cu113-ubuntu20.04-sagemaker-v1.0

# https://github.com/aws/deep-learning-containers/blob/master/available_images.md 
# refer to the above page to pull latest Pytorch image

LABEL maintainer="Amazon AI"
LABEL dlc_major_version="1"

# Version args - overwritten by args specified in buildspec
ARG TRANSFORMERS_VERSION=4.19.2
ARG DATASETS_VERSION=1.18.4
ARG PYTHON=python3

ARG PT_BUCKET=https://sm-training-comp-pytorch-binaries.s3.us-west-2.amazonaws.com/6f7707122a5d66d36080e7aaa48e6e059fad9860
ARG PT_URL=${PT_BUCKET}/torch-1.12.0%2Bcu113-cp38-cp38-linux_x86_64.whl
ARG PT_XLA_URL=${PT_BUCKET}/torch_xla-1.12-cp38-cp38-linux_x86_64.whl
ARG TORCHVISION_URL=${PT_BUCKET}/torchvision-0.13.0a0%2Bda3794e-cp38-cp38-linux_x86_64.whl
ARG TORCHAUDIO_URL=${PT_BUCKET}/torchaudio-0.12.0%2B2e13884-cp38-cp38-linux_x86_64.whl


# Install Sagemaker PythonSDK
# ARG SAGEMAKER_BINARY="sagemaker.tar.gz"

# COPY ${SAGEMAKER_BINARY} .
RUN pip install --no-cache-dir sagemaker


# RUN pip install --no-cache-dir ${SAGEMAKER_BINARY} \
#  && rm -rf ${SAGEMAKER_BINARY}

# install Hugging Face libraries and its dependencies
RUN pip install -U --no-cache-dir \ 
	transformers[sklearn,sentencepiece,audio,vision]==${TRANSFORMERS_VERSION} \ 
	datasets==${DATASETS_VERSION}

RUN apt-get update \
 # TODO: Remove upgrade statements once packages are updated in base image
 && apt-get -y upgrade --only-upgrade systemd openssl cryptsetup \
 && apt install -y git-lfs \
 && apt install -y libomp5 \
 && apt-get clean \  
 && rm -rf /var/lib/apt/lists/*


ARG CONDA_PREFIX=/opt/conda

# Install common training dependencies
RUN ${CONDA_PREFIX}/bin/conda install -y -c conda-forge librosa
RUN pip install --no-cache-dir \
    sacrebleu \
    fugashi \
    ipadic \
    nltk \
    rouge-score \
    soundfile \
    sentence-transformers \
    evaluate

# # Numpy version gets downgraded and becomes incompatible with PyTorch wheel in the above conda command.
# RUN pip install numpy --upgrade 

# Install Horovod
# RUN pip uninstall horovod
# ENV HOROVOD_VERSION=0.24.3
# RUN pip uninstall -y horovod \
#  && ldconfig /usr/local/cuda-11.3/targets/x86_64-linux/lib/stubs \
#  && HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_CUDA_HOME=/usr/local/cuda-11.3 HOROVOD_WITH_PYTORCH=1 pip install --no-cache-dir horovod==${HOROVOD_VERSION} \
#  && ldconfig

RUN HOME_DIR=/root \
 && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
 && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
 && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
 && chmod +x /usr/local/bin/testOSSCompliance \
 && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \
 && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
 && rm -rf ${HOME_DIR}/oss_compliance*